{"version":3,"sources":["components/ContactListItem/ContactListItem.js","components/ContactList/ConactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactListItem","id","name","number","onDelete","className","type","onClick","ContactList","contacts","onChange","map","contact","ContactForm","state","handleSubmit","event","preventDefault","props","onSubmit","reset","handleChange","currentTarget","value","setState","this","pattern","title","required","Component","Filter","App","filter","contactFormSubmit","uuidv4","console","log","toLowerCase","includes","alert","contactId","prevState","changeFilter","getFiltredContacts","normalizedFilter","filtredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5402b452.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactListItem.scss'\r\n\r\nconst ContactListItem = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <li key={id} className=\"item\">\r\n      <p className=\"contactInfo\">\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className=\"deleteBtn\"\r\n        type=\"button\"\r\n        onClick={() => onDelete(id)}>\r\n        Delete\r\n        </button>\r\n\r\n    </li>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport './ContactList.scss'\r\n\r\n\r\nconst ContactList = ({ contacts, onChange}) => {\r\n  return (\r\n    <ul className=\"contactList\">\r\n      {contacts.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          onChange={contact.onDelete}\r\n        />\r\n      ))}\r\n\r\n\r\n\r\n    </ul>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n\r\n};\r\n\r\nexport default ContactList;\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: ''\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"contactForm\" onSubmit={this.handleSubmit}>\r\n        <label className=\"label__name\">\r\n          Name\r\n          <input\r\n          className=\"input__form\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className=\"label__name\">\r\n          Number\r\n          <input\r\n          className=\"input__form\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"addContactBtn\">\r\n          Add contact</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n\r\n","import PropTypes from 'prop-types';\r\nimport './Filter.scss';\r\n// import './Filter.scss';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className=\"label__name\">\r\n    Find contact by name\r\n    <input\r\n    className=\"input__form\"\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n)\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport './App.scss';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n\n  contactFormSubmit = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number\n    }\n    console.log(contact);\n\n    const normalizedName = this.state.contacts.map(contact => contact.name.toLowerCase())\n\n    if (normalizedName.includes(contact.name.toLowerCase())) {\n      alert(`${contact.name} is already in contacts`)\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }))\n    }\n  };\n\n  onDelete = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }))\n  }\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value })\n  }\n\n  getFiltredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.includes(normalizedFilter))\n  }\n\n  render() {\n    const { filter, contacts } = this.state;\n    const filtredContacts = this.getFiltredContacts();\n\n    return (\n\n      <div className=\"container\">\n        <h1 className=\"main__title\">Phonebook</h1>\n        <ContactForm onSubmit={this.contactFormSubmit} />\n\n        <h2 className=\"contacts__title\">Contacts</h2>\n\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={filtredContacts} onChange={this.onDelete} />\n\n      </div>\n    )\n\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}